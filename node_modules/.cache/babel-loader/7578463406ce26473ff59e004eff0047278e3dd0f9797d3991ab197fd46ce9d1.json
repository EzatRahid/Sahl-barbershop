{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ezatb\\\\OneDrive\\\\Desktop\\\\sahl\\\\sahl\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport Navbar from \"./components/navbar\";\nimport Main from \"./components/main\";\nimport About from \"./components/about\";\nimport { useEffect } from \"react\";\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  useEffect(() => {\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        entry.target.classList.toggle('show', entry.isIntersecting);\n        if (entry.isIntersecting) {\n          observer.unobserve(entry.target); // Corrected this line\n        }\n      });\n    });\n\n    // Add your logic to select and observe elements here\n    // For example:\n    // const elementsToObserve = document.querySelectorAll('.your-elements');\n    // elementsToObserve.forEach((element) => {\n    //   observer.observe(element);\n    // });\n\n    return () => {\n      // Cleanup when the component unmounts\n      observer.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Navbar","Main","About","useEffect","jsxDEV","_jsxDEV","App","_s","observer","IntersectionObserver","entries","forEach","entry","target","classList","toggle","isIntersecting","unobserve","disconnect","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ezatb/OneDrive/Desktop/sahl/sahl/src/App.js"],"sourcesContent":["import Navbar from \"./components/navbar\";\nimport Main from \"./components/main\";\nimport About from \"./components/about\";\n\nimport { useEffect } from \"react\";\nimport './styles.css'\n\n\n\nfunction App() {\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries) => {\n      entries.forEach((entry) => {\n        entry.target.classList.toggle('show', entry.isIntersecting);\n        if (entry.isIntersecting) {\n          observer.unobserve(entry.target); // Corrected this line\n        }\n      });\n    });\n  \n    // Add your logic to select and observe elements here\n    // For example:\n    // const elementsToObserve = document.querySelectorAll('.your-elements');\n    // elementsToObserve.forEach((element) => {\n    //   observer.observe(element);\n    // });\n  \n    return () => {\n      // Cleanup when the component unmounts\n      observer.disconnect();\n    };\n  }, [])\n  return (\n    <div>\n      <Navbar/>\n      <Main/>\n      <About/>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,qBAAqB;AACxC,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,KAAK,MAAM,oBAAoB;AAEtC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIrB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACbJ,SAAS,CAAC,MAAM;IACd,MAAMK,QAAQ,GAAG,IAAIC,oBAAoB,CAAEC,OAAO,IAAK;MACrDA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzBA,KAAK,CAACC,MAAM,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEH,KAAK,CAACI,cAAc,CAAC;QAC3D,IAAIJ,KAAK,CAACI,cAAc,EAAE;UACxBR,QAAQ,CAACS,SAAS,CAACL,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC;QACpC;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;;IAEF;IACA;IACA;IACA;IACA;IACA;;IAEA,OAAO,MAAM;MACX;MACAL,QAAQ,CAACU,UAAU,CAAC,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA,CAACL,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACTlB,OAAA,CAACJ,IAAI;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACPlB,OAAA,CAACH,KAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAAChB,EAAA,CA9BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AAgCZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}